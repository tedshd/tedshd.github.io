<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Tedshd&#39;s Dev note</title>
    <link>/categories/web/</link>
    <description>Tedshd&#39;s Dev note (Web)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 May 2025 08:32:05 +0800</lastBuildDate>
    
    <atom:link href="/categories/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PWA(progressive web app) 漸進式網路應用程式 研究筆記</title>
      <link>/posts/pwa/</link>
      <pubDate>Mon, 05 May 2025 08:32:05 +0800</pubDate>
      
      <guid>/posts/pwa/</guid>
      <description>&lt;h2 id=&#34;intro&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#intro&#34;&gt;
        #
    &lt;/a&gt;
    Intro
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;關於 PWA(progressive web app) &lt;a href=&#34;https://developer.mozilla.org/zh-TW/docs/Web/Progressive_web_apps&#34;&gt;MDN&lt;/a&gt; 已經有詳細的介紹了, 所以就不多說了&lt;/p&gt;
&lt;p&gt;主要記錄以目前 2025 年的當下對瀏覽器的支援現況&lt;/p&gt;
&lt;h2 id=&#34;系統支援度&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e7%b3%bb%e7%b5%b1%e6%94%af%e6%8f%b4%e5%ba%a6&#34;&gt;
        #
    &lt;/a&gt;
    系統支援度
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;目前在 mac chrome / Safari 和 windows chrome / Edge 都可以支援&lt;/p&gt;
&lt;p&gt;mobile device 的話, iPhone Safari 支援, Android 大多支援, 少部分因為 OEM 品牌可能因為魔改了 Android 系統, 會導致 PWA 安裝了, 但是不會出現, 相當於沒有安裝成功, 目前也嘗試不出來有其他的解決方案, 所以會建議在統一的使用體驗上不要去支援 PWA, 這樣在 mobile device 上面就只會是單純的添加捷徑的功能&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web 服務確認 IP Location 的幾種做法</title>
      <link>/posts/web_how_to_check_ip/</link>
      <pubDate>Mon, 25 Apr 2022 10:15:23 +0800</pubDate>
      
      <guid>/posts/web_how_to_check_ip/</guid>
      <description>&lt;h2 id=&#34;intro&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#intro&#34;&gt;
        #
    &lt;/a&gt;
    Intro
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;在很多實務上的需求, 需要了解 client 過來的請求是來自哪裡或來自哪個國家&lt;/p&gt;
&lt;p&gt;最常見的方式就是依靠來源的 IP 判斷(這裡排除 proxy, VPN 或造假來源的因素)&lt;/p&gt;
&lt;p&gt;而在 HTTP protocol 中, 會把 IP 附在 header(至於帶在哪個 header 與支援哪些 header 主要取決於各個語言對 HTTP 的實作)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tedshd.io/demo/php/ip.php&#34;&gt;header Sample&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上述範例只是取幾個比較常見的會帶上去的 header&lt;/p&gt;
&lt;p&gt;至於更加詳細的 header 支援與取得 IP 時需要注意哪些事情可以參考以下文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://devco.re/blog/2014/06/19/client-ip-detection/&#34;&gt;Refer - 如何正確的取得使用者 IP？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而為何可以用 IP 能夠確認出是在哪個地區國家甚至城市呢?&lt;/p&gt;
&lt;p&gt;主要是因為有 IANA(Internet Assigned Numbers Authority) 進行了 IP 網段的分配&lt;/p&gt;
&lt;p&gt;又有細分 ABCDE 級網段&lt;/p&gt;
&lt;p&gt;這裡先大略講一下&lt;/p&gt;
&lt;p&gt;相關資訊可以去看網路概論等相關的資料&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%90%84%E5%9C%8BIPv4%E4%BD%8D%E5%9D%80%E5%88%86%E9%85%8D%E5%88%97%E8%A1%A8&#34;&gt;Refer - 各國IPv4位址分配列表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%B7%B2%E5%88%86%E9%85%8D%E7%9A%84/8_IPv4%E5%9C%B0%E5%9D%80%E5%9D%97%E5%88%97%E8%A1%A8&#34;&gt;Refer - 已分配的/8 IPv4位址網段列表&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;方法&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e6%96%b9%e6%b3%95&#34;&gt;
        #
    &lt;/a&gt;
    方法
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;現在有幾種方法可以處理這件事情&lt;/p&gt;
&lt;p&gt;但是經有上述的介紹可以知道其實最主要的基本判斷就是得知道哪些 IP 段對應哪些國家&lt;/p&gt;
&lt;p&gt;那接下來就是有哪些方法可以來做這件事了&lt;/p&gt;
&lt;p&gt;大致上分兩個方向&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;自己處理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用第三方服務處理&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一種方式就是自己建立與維護一組 IP table 的資料庫&lt;/p&gt;
&lt;p&gt;來比對哪些 IP 對應的國家&lt;/p&gt;
&lt;p&gt;比較常用的有 &lt;a href=&#34;https://www.maxmind.com/en/geoip2-services-and-databases?lang=en&#34;&gt;GeoIP2&lt;/a&gt; 和 &lt;a href=&#34;https://dev.maxmind.com/geoip/geolite2-free-geolocation-data??lang=en&#34;&gt;GeoLite2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GeoIP2 需要付費, 但是更新頻繁, 也可以對應較多的區域城市細節&lt;/p&gt;
&lt;p&gt;GeoLite2 免費, 但只能查到國家&lt;/p&gt;
&lt;p&gt;記得還有一些服務也有提供 IP table 資料庫&lt;/p&gt;
&lt;p&gt;也可以多找找看&lt;/p&gt;
&lt;p&gt;第二種方式是我個人比較喜歡的方式, 主要是不用自己維護 IP table&lt;/p&gt;
&lt;p&gt;主要會有幾種方式可以處理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;掛 CDN 服務或第三方服務使用服務提供的 header&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 Cloudflare worker 建立 API 來取資料&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;a href=&#34;https://ip-api.com/&#34;&gt;https://ip-api.com/&lt;/a&gt; 服務來取得 location&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;AWS 的 CDN 服務 cloudfront&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-cloudfront-headers.html&#34;&gt;Adding the CloudFront HTTP headers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;header 有 &lt;code&gt;cloudfront-viewer-country&lt;/code&gt; 可以取得 ISO 3166 的國家代碼&lt;/p&gt;
&lt;p&gt;Cloudflare 設定&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://support.cloudflare.com/hc/en-us/articles/200168236-Configuring-Cloudflare-IP-Geolocation&#34;&gt;Configuring Cloudflare IP Geolocation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;設定完之後&lt;/p&gt;
&lt;p&gt;就可以在 header 收到 &lt;code&gt;cf-ipcountry&lt;/code&gt; 的 header 就會是 ISO 3166 的國家代碼&lt;/p&gt;
&lt;p&gt;我個人是覺得掛 CDN 是相對簡單解決的方法&lt;/p&gt;
&lt;p&gt;至於使用 Cloudflare worker 也是個不錯的方案&lt;/p&gt;
&lt;p&gt;只要設定好跑 worker 的 url&lt;/p&gt;
&lt;p&gt;然後要跑的 code 範例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addEventListener(&lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#34;fetch&amp;#34;&lt;/span&gt;, event =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  event.respondWith(handleRequest(event.request))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#ff5c57&#34;&gt;function&lt;/span&gt; handleRequest(request) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff6ac1&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff6ac1&#34;&gt;new&lt;/span&gt; Response(JSON.stringify({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#34;country&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;:&lt;/span&gt; request.cf.country
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }), {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    headers&lt;span style=&#34;color:#ff6ac1&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff6ac1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#5af78e&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣就會回傳請求時的國家了&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.cloudflare.com/workers/runtime-apis/request/&#34;&gt;Refer - Request&lt;/a&gt;
&lt;a href=&#34;https://developers.cloudflare.com/workers/runtime-apis/response/&#34;&gt;Refer - Response&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當然 worker 免費方案下也是有請求限制&lt;/p&gt;
&lt;p&gt;ip-api 的話已經是現成的 API 了&lt;/p&gt;
&lt;p&gt;可以直接使用&lt;/p&gt;
&lt;p&gt;免費方案也是有請求限制的&lt;/p&gt;
&lt;h2 id=&#34;總結&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e7%b8%bd%e7%b5%90&#34;&gt;
        #
    &lt;/a&gt;
    總結
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;自己搞 ip table 的方式和使用 cloudfront 與 cloudflare 的方式都比較適合是在 server 端判斷 location 會用到&lt;/p&gt;
&lt;p&gt;worker 和 ip-api 適合是需要在 client 時判斷用&lt;/p&gt;
&lt;p&gt;不過 ip-api 的 api 支援帶入 ip 取 local, 所以就可以在 server 使用&lt;/p&gt;
&lt;h2 id=&#34;最後補充&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#%e6%9c%80%e5%be%8c%e8%a3%9c%e5%85%85&#34;&gt;
        #
    &lt;/a&gt;
    最後補充
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;因為很少在用 GCP&lt;/p&gt;
&lt;p&gt;問了相關專業人士後&lt;/p&gt;
&lt;p&gt;其實 GCP 的服務也有類似的方式可以處理&lt;/p&gt;
&lt;p&gt;是掛在 GCP 的 Cloud Load Balancing 裏面&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/load-balancing/docs/https/custom-headers&#34;&gt;Create custom headers in backend services&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果要用 cloud function 或是 App Engine 也是有特別的 header 可以用&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/appengine/docs/standard/go/reference/request-response-headers&#34;&gt;Request Headers and Responses&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/mop-developers/free-ip-based-geolocation-with-google-cloud-functions-f92e20d47651&#34;&gt;Refer - Free IP-based GeoLocation with Google Cloud Functions&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
