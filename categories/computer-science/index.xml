<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Science on tedshd&#39;s DevNote</title>
    <link>http://blog.tedshd.io/categories/computer-science/</link>
    <description>Recent content in Computer Science on tedshd&#39;s DevNote</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2020 Tedshd</copyright>
    <lastBuildDate>Tue, 27 Aug 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.tedshd.io/categories/computer-science/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Computer Science</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science/</guid>
      <description>電腦的本質 從計算機發展到現今的電腦,從機械到電子,從簡單到複雜,都脫離不了三個基本性質. 功能分離(function abstraction) 許多不同的階層在獨立運作</description>
    </item>
    
    <item>
      <title>Computer Science - 亂數</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-random-number-science/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-random-number-science/</guid>
      <description>亂數 數位電腦如何產生隨機訊號?項電腦這樣的決定性系統(deterministic system)可以產生一串真正的隨機數列嗎?嚴格說起來,答案</description>
    </item>
    
    <item>
      <title>Computer Science - 位元和邏輯區組</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-and-logical-block/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-and-logical-block/</guid>
      <description>位元和邏輯區組 任何可以表示兩種不同訊息的信號就叫二元(binary)信號,或稱為位元. And Or Invert 函數稱為邏輯區組,把他們依序組合還可以得到其他函</description>
    </item>
    
    <item>
      <title>Computer Science - 作業系統</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-operating-system/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-operating-system/</guid>
      <description>作業系統 指令集複雜度之所以不重要,是因為有副程式.副程式可以讓一串指令在程式中被無限使用.事實上,程式設計師可以用呼叫副程式的方式將原有的指</description>
    </item>
    
    <item>
      <title>Computer Science - 布林邏輯</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-boolean-logic/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-boolean-logic/</guid>
      <description>布林邏輯 思維規律的研究(an investigation of the laws of thought)-布耳(George Boole) 布林代數(Boolean algebra) 布林代數很像高中所學的的代數,不同的是</description>
    </item>
    
    <item>
      <title>Computer Science - 有限狀態機</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-of-finite-state-machine/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-of-finite-state-machine/</guid>
      <description>有限狀態機 它可以執行隨時間而改變的函數,也就是不但與目前的輸入值有關,也受之前輸入值影響的函數. 有限狀態機的基本構想是將一個對照表與記憶元件</description>
    </item>
    
    <item>
      <title>Computer Science - 杜林機</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-du-linji/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-du-linji/</guid>
      <description>杜林機 計算理論的中心觀念在於通用電腦(universal computer)的概念,所謂的通用電腦是一步功能超強,能夠模擬任何計算裝置的電腦.</description>
    </item>
    
    <item>
      <title>Computer Science - 流體電腦</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-fluid-machine/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-fluid-machine/</guid>
      <description>流體電腦 管路以水壓來表示兩種不同的訊號.在液壓活門中,控制端的水流可以操作輸出端水流,但輸出端的水流並不會影響控制端的水流,這限制了訊息的傳</description>
    </item>
    
    <item>
      <title>Computer Science - 演算法</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-algorithm/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-algorithm/</guid>
      <description>演算法 演算法與啟發式解法 不論是不是用來處理數字,演算法(algorithm)是一種萬全的程序,保證能達成特定的目的.[演算法]一詞源自阿拉伯</description>
    </item>
    
    <item>
      <title>Computer Science - 與硬體對話</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-hardware-and-science-dialogue/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-hardware-and-science-dialogue/</guid>
      <description>與硬體對話 就像布林邏輯和有限狀態機是電腦硬體的建構區組一樣,程式語言等於是組成電腦軟體的建構區組.和人類的語言一樣,程式語言也有字彙和文法,</description>
    </item>
    
    <item>
      <title>Computer Science - 計算能力</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-capable/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-capable/</guid>
      <description>計算能力 雖然通用電腦可以做任何計算裝置所能計算的事物,但還是有它無法計算的東西,像是定義含糊籠統的問題,實際上我們很少遇到不可計算的問題,因</description>
    </item>
    
    <item>
      <title>Computer Science - 語言轉譯</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-translation-of-science-language/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-translation-of-science-language/</guid>
      <description>語言轉譯 目前已將技術和指令兩者串連起來,但語言是以文字撰寫的,而指令是一些位元組合,電腦本身必須自己將程式轉換成位元組合. 電腦翻譯程式語言的</description>
    </item>
    
    <item>
      <title>Computer Science - 量子計算</title>
      <link>http://blog.tedshd.io/posts/2013-08-27-computer-science-of-quantum-computation/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.tedshd.io/posts/2013-08-27-computer-science-of-quantum-computation/</guid>
      <description>量子計算 電腦所產生的假隨機數列看起來是雜亂的,但它仍是靠某種潛在的演算法計算出來,若知道序列產生的方式,就可以預測它,而它就不再是隨機.而唯</description>
    </item>
    
  </channel>
</rss>